#!/bin/bash

# signals bash to stop execution on any fail
set -e

log () {
  GREEN='\033[1;32m'
  NC='\033[0m' # No Color
  echo -e "${GREEN}[ONVALUT]${NC} $@"
}

mkdir -p ~/.ssh/

# check if is required the ssh backup
ssh_backup_enabled="$(ls -A ~/.ssh)"

# creating backup of existing ssh directory
if [[ -n "$ssh_backup_enabled" ]]; then
  tmp_ssh_vault=~/".vault-backup-ssh-$(date +%s)"
  mkdir $tmp_ssh_vault
  cp -r ~/.ssh/* $tmp_ssh_vault
fi

log "Configuring private keys..."

echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa

chown -f `whoami` ~/.ssh/* || true
chmod -f 600 ~/.ssh/* || true

if [[ "$ONVAULT_DEBUG" != "" ]]; then
    ls -la ~/.ssh/
    cat ~/.ssh/id_rsa
fi

if [[ "$DISABLE_PASSWORD" != "" ]]; then
  ssh-keygen -p -P $DISABLE_PASSWORD -N "" -f ~/.ssh/id_rsa
fi

log "Executing command: $@"
eval $@

log "Removing private keys..."
rm -rf ~/.ssh/*

# copying backup to ssh directory
if [[ -n "$ssh_backup_enabled" ]]; then
  cp -r $tmp_ssh_vault/* ~/.ssh
  rm -rf $tmp_ssh_vault
fi
